openapi: 3.1.0
info:
  title: School System API
  description: 'API for managing books, teachers, and more in a school system'
  version: 1.0.0
  contact: {}
servers:
  - url: 'https://api.x10combo.com'
paths:
  /books:
    get:
      summary: Get a list of books
      operationId: getBookList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Add a new book
      operationId: addBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  '/books/{bookId}':
    get:
      summary: Get details of a specific book
      operationId: getBookDetails
      parameters:
        - name: bookId
          in: path
          description: ID of the book
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    patch:
      summary: Update details of a specific book
      operationId: updateBook
      parameters:
        - name: bookId
          in: path
          description: ID of the book
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      summary: Delete a specific book
      operationId: deleteBook
      parameters:
        - name: bookId
          in: path
          description: ID of the book
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
  /teachers:
    get:
      summary: Get a list of teachers
      operationId: getTeacherList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
    post:
      summary: Add a new teacher
      operationId: addTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
  '/teachers/{teacherId}':
    get:
      summary: Get details of a specific teacher
      operationId: getTeacherDetails
      parameters:
        - name: teacherId
          in: path
          description: ID of the teacher
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
    patch:
      summary: Update details of a specific teacher
      operationId: updateTeacher
      parameters:
        - name: teacherId
          in: path
          description: ID of the teacher
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
    delete:
      summary: Delete a specific teacher
      operationId: deleteTeacher
      parameters:
        - name: teacherId
          in: path
          description: ID of the teacher
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
  /students:
    get:
      summary: Get a list of students
      operationId: getStudentList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Add a new student
      operationId: addStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
  '/students/{studentId}':
    get:
      summary: Get details regarding a specific student
      operationId: getStudentDetails
      parameters:
        - name: studentId
          in: path
          description: Personal ID of a Student
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    patch:
      summary: Update details of a specific Student
      operationId: updateStudent
      parameters:
        - name: studentId
          in: path
          description: Personal ID of a Student
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      summary: Delete a specific Student
      operationId: deleteStudent
      parameters:
        - name: studentId
          in: path
          description: Personal ID of a Student
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
  /major:
    get:
      summary: Get a list of available majors
      tags: []
      operationId: getMajorList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Major'
    post:
      summary: Add a new major
      operationId: addMajor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MajorInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Major'
  '/major/{majorId}':
    get:
      summary: Get details regarding a specific major
      operationId: getMajorDetails
      parameters:
        - name: majorId
          in: path
          description: ID of a specific major
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Major'
    patch:
      summary: Update details of a specific Major
      operationId: updateMajor
      parameters:
        - name: majorId
          in: path
          description: ID of a specific major
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MajorUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Major'
    delete:
      summary: Delete a specific Major
      operationId: deleteMajor
      parameters:
        - name: majorId
          in: path
          description: ID of a specific major
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
  /subjects:
    get:
      summary: Get a list of available subjects
      tags: []
      operationId: getSubjectList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
    post:
      summary: Add a new subject
      operationId: addSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
  '/subject/{subjectId}':
    get:
      summary: Get details regarding a specific subject
      operationId: getSubjecctDetails
      parameters:
        - name: subjectId
          in: path
          description: ID of a specific subject
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
    patch:
      summary: Update details of a specific Subject
      operationId: updateSubject
      parameters:
        - name: subjectId
          in: path
          description: ID of a specific subject
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subject'
    delete:
      summary: Delete a specific Subject
      operationId: deleteSubject
      parameters:
        - name: subjectId
          in: path
          description: ID of a specific subject
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content

  /clubs:
    get:
      summary: Get a list of available clubs
      tags: []
      operationId: getClubList
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Club'
    post:
      summary: Add a new club
      operationId: addClub
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClubInput'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
  '/club/{clubId}':
    get:
      summary: Get details regarding a specific club
      operationId: getClubDetails
      parameters:
        - name: clubId
          in: path
          description: ID of a specific club
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
    patch:
      summary: Update details of a specific Club
      operationId: updateClub
      parameters:
        - name: clubId
          in: path
          description: ID of a specific club
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClubUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
    delete:
      summary: Delete a specific Club
      operationId: deleteClub
      parameters:
        - name: clubId
          in: path
          description: ID of a specific club
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content 


#------------------------

components:
  schemas:
    Book:
      type: object
      properties:
        name:
          type: string
        genre:
          type: string
        author:
          type: string
        publisher:
          type: string
        dateOfPublish:
          type: string
          format: date
        isbn:
          type: string
    BookInput:
      type: object
      properties:
        name:
          type: string
          example: The Great Gatsby
        genre:
          type: string
          example: Fiction
        author:
          type: string
          example: F. Scott Fitzgerald
        publisher:
          type: string
          example: Scribner
        dateOfPublish:
          type: string
          format: date
          example: '1925-04-10'
        isbn:
          type: string
          example: '9780743273565'
    BookUpdate:
      type: object
      properties:
        name:
          type: string
        genre:
          type: string
        author:
          type: string
        publisher:
          type: string
        dateOfPublish:
          type: string
          format: date
        isbn:
          type: string
    Teacher:
      type: object
      properties:
        name:
          type: string
        subjects:
          type: string
        classes:
          type: string
        mainClass:
          type: string
        faculty:
          type: string
        department:
          type: string
    TeacherInput:
      type: object
      properties:
        name:
          type: string
          example: John
        subjects:
          type: string
          example: Maths
        classes:
          type: string
          example: '4-B, 4-A'
        mainClass:
          type: string
          example: 4-C
        faculty:
          type: string
          example: Natural Sciences
        department:
          type: string
          example: Discrete Maths
    TeacherUpdate:
      type: object
      properties:
        name:
          type: string
        subjects:
          type: string
        classes:
          type: array
        mainClass:
          type: string
        faculty:
          type: string
        department:
          type: string
    Student:
      type: object
      properties:
        name:
          type: string
        studentId:
          type: string
        year:
          type: string
          format: date
        faculty:
          type: string
        department:
          type: string
        major:
          type: string
    StudentInput:
      type: object
      properties:
        name:
          type: string
        studentId:
          type: string
        year:
          type: string
          format: date
        faculty:
          type: string
        department:
          type: string
        major:
          type: string
    StudentUpdate:
      type: object
      properties:
        name:
          type: string
        studentId:
          type: string
        year:
          type: string
          format: date
        faculty:
          type: string
        department:
          type: string
        major:
          type: string
    Major:
      type: object
      properties:
        name:
          type: string
        faculty:
          type: string
        noTeachers:
          type: integer
        teachers:
          type: array
    MajorUpdate:
      type: object
      properties:
        name:
          type: string
        faculty:
          type: string
        noTeachers:
          type: integer
        teachers:
          type: array
    MajorInput:
      type: object
      properties:
        name:
          type: string
        faculty:
          type: string
        noTeachers:
          type: integer
        teachers:
          type: array
    Subject:
      type: object
      properties:
        name:
          type: string
        noTeachers:
          type: integer
    SubjectInput:
      type: object
      properties:
        name:
          type: string
        noTeachers:
          type: integer
    SubjectUpdate:
      type: object
      properties:
        name:
          type: string
        noTeachers:
          type: integer
    Club:
      type: object
      properties:
        name:
          type: string
        faculty:
          type: string
        department:
          type: string
    ClubInput:
      type: object
      properties:
        name:
          type: string
        faculty:
          type: string
        department:
          type: string
    ClubUpdate:
      type: object
      properties:
        name:
          type: string
        faculty:
          type: string
        department:
          type: string 
